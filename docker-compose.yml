services:
  scheduler:
    build: ./worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
      - TZ=Africa/Harare
    depends_on:
      redis:
        condition: service_healthy
      pgdb2:
        condition: service_healthy
    dns:
      - 8.8.8.8
      - 8.8.4.4

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50


  pgdb2:
    image: postgres
    container_name: pgdb2
    environment:
      - POSTGRES_DB=alert_app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5

  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "8088:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      pgdb2:
        condition: service_healthy

  backend:
    build: ./backend
    container_name: backend
    environment:
      DATABASE_URL: ${db}
    ports:
      - "8001:8001"
    env_file:
      - .env
    volumes:
      - ./backend:/app
    depends_on:
      pgdb2:
        condition: service_healthy
  
volumes:
  pgadmin-data:
  pgdata:

  